---
- name: move from DHCP to desired fix IP 
  hosts: all 
  
  tasks: 
  - name: setup hosts file entries
    lineinfile:
      path: /etc/hosts
      line: "{{ item }}"
    with_items: 
      - "192.168.122.120 tower ansible-h"
      - "192.168.122.130 satellite satellite-h"
      - "192.168.122.140 zabbix zabbix-h"
      - "192.168.122.150 f5 f5-h"
      - "88.99.250.153 hetzner"

  # OMG, just use templates please... this isn't quite idempotent..
  # ... will probably not happen. 
  - name: limit dhcp range of hosts in libvirtd 
    shell: virsh net-dumpxml default > dump254 && sed -i s/end=\'192.168.122.254\'/end=\'192.168.122.99\'/ dump254 && virsh net-define --file dump254 

  - name: copy new production network data to hypervisor
    copy: 
      src: configs/prod_dump254
      dest: /home/ansible

#  - name: define new production network 
#    virt_net: 
#      command: define
#      name: production
#      xml: /home/ansible/prod_dump254

  # cannot parse XML start tag abov via virt_net? from a dumpxml file? gah. This seems to be a bug too. Another command command.
  - name: define new production network via command
    command: virsh net-define --file prod_dump254
     
  - name: start new production network 
    virt_net: 
      command: create
      name: production

  - name: activate new production network 
    virt_net: 
      name: production
      state: active

#   # OMG #2 
#   - name: limit dhcp range of hosts in libvirtd 
#     shell: virsh net-dumpxml production > prod_dump254 && sed -i s/end=\'192.168.122.254\'/end=\'192.168.122.99\'/ prod_dump254 && virsh net-define --file prod_dump254 

  - name: shutdown VMs, get a clean reboot
    virt: 
      name: "{{ item }}"
      state: shutdown
    with_items: 
        - ansible-h
        - satellite-h

# Probing for their state would be better, btw. 
  - name: give the VMs 30s to shut down 
    pause: 
      seconds: 30

  - name: reboot hetzner
    reboot: 
      msg: Rebooted by Ansible to finalize/test network config change

  - name: start VMs
    virt: 
      name: "{{ item }}"
      state: running
    with_items: 
        - ansible-h
        - satellite-h
